(defwidget powermenu_bar []
  (centerbox :orientation "h"
    (wifi)
    (audio)
    (cpu)
    (ram)
    (time)
    (power)))

(defwidget wifi []
  (box :class "wifi" :orientation "h" :space-evenly false :halign "start"
    (label :text "WiFi: ")
    (label :text {net != "" ? net : "Disconnected"})))

(defwidget audio []
  (box :class "audio" :orientation "h" :space-evenly false :halign "center"
    (label :text "ðŸ”Š ")
    (metric :label "Volume"
            :value volume
            :onchange "amixer -D pulse sset Master {}%")))

(defwidget cpu []
  (box :class "cpu" :orientation "h" :space-evenly false :halign "center"
    (label :text "CPU: ")
    (metric :label "CPU Usage"
            :value {round(EWW_CPU.usage, 0)}
            :onchange "")))

(defwidget ram []
  (box :class "ram" :orientation "h" :space-evenly false :halign "center"
    (label :text "RAM: ")
    (metric :label "RAM Usage"
            :value {round((EWW_RAM.used_mem_perc), 0)}
            :onchange "")))

(defwidget time []
  (box :class "time" :orientation "h" :space-evenly false :halign "end"
    (label :text {time != "" ? time : ""})))

(defwidget power []
  (box :class "power" :orientation "h" :space-evenly false :halign "end"
    (button :onclick "poweroff" :label "Power Off")
    (button :onclick "reboot" :label "Reboot")
    (button :onclick "logout" :label "Logout")))

(defpoll net :interval "30s"
  "nmcli -t -f SIGNAL,ACTIVE device wifi | awk -F':' '{if($2==\"yes\")print$1}'")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defpoll cpu :interval "1s"
  "cat /proc/stat | awk 'NR==1 {print $2}'")

(defpoll ram :interval "1s"
  "free | grep Mem | awk '{print $3/$2 * 100.0}'")

(defwindow powermenu
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "90%"
                      :height "30px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "5%")
  (powermenu_bar))
